<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kuaidi.dao.EforcesBankPayInfoMapper">
  <resultMap id="BaseResultMap" type="org.kuaidi.bean.domain.EforcesBankPayInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="customerName" jdbcType="VARCHAR" property="customername" />
    <result column="banknum" jdbcType="VARCHAR" property="banknum" />
    <result column="bankType" jdbcType="VARCHAR" property="banktype" />
    <result column="billpic" jdbcType="VARCHAR" property="billpic" />
    <result column="signId" jdbcType="INTEGER" property="signid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, customerName, banknum, bankType, billpic, signId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from eforces_bankpayinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByNetSignId" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from eforces_bankpayinfo	
  	where
      signId = #{signId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from eforces_bankpayinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert">
    insert into eforces_bankpayinfo (customerName, banknum,
      bankType, billpic, signId
      )
    values (#{customername,jdbcType=VARCHAR}, #{banknum,jdbcType=VARCHAR},
      #{banktype,jdbcType=VARCHAR}, #{billpic,jdbcType=VARCHAR}, #{signid,jdbcType=INTEGER}
      )
  </insert>


  <!-- 修改支付方式-->
  <update id="updatePay" parameterType="org.kuaidi.bean.domain.EforcesBankPayInfo">
    update eforces_bankpayinfo
    set customerName = #{customername,jdbcType=VARCHAR},
      banknum = #{banknum,jdbcType=VARCHAR},
      bankType = #{banktype,jdbcType=VARCHAR},
      billpic = #{billpic,jdbcType=VARCHAR},
      signId = #{signid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
   </update>


  <insert id="insertSelective" parameterType="org.kuaidi.bean.domain.EforcesBankPayInfo">
    insert into eforces_bankpayinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customername != null">
        customerName,
      </if>
      <if test="banknum != null">
        banknum,
      </if>
      <if test="banktype != null">
        bankType,
      </if>
      <if test="billpic != null">
        billpic,
      </if>
      <if test="signid != null">
        signId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customername != null">
        #{customername,jdbcType=VARCHAR},
      </if>
      <if test="banknum != null">
        #{banknum,jdbcType=VARCHAR},
      </if>
      <if test="banktype != null">
        #{banktype,jdbcType=VARCHAR},
      </if>
      <if test="billpic != null">
        #{billpic,jdbcType=VARCHAR},
      </if>
      <if test="signid != null">
        #{signid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.kuaidi.bean.domain.EforcesBankPayInfo">
    update eforces_bankpayinfo
    <set>
      <if test="customername != null">
        customerName = #{customername,jdbcType=VARCHAR},
      </if>
      <if test="banknum != null">
        banknum = #{banknum,jdbcType=VARCHAR},
      </if>
      <if test="banktype != null">
        bankType = #{banktype,jdbcType=VARCHAR},
      </if>
      <if test="billpic != null">
        billpic = #{billpic,jdbcType=VARCHAR},
      </if>
      <if test="signid != null">
        signId = #{signid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.kuaidi.bean.domain.EforcesBankPayInfo">
    update eforces_bankpayinfo
    set customerName = #{customername,jdbcType=VARCHAR},
      banknum = #{banknum,jdbcType=VARCHAR},
      bankType = #{banktype,jdbcType=VARCHAR},
      billpic = #{billpic,jdbcType=VARCHAR},
      signId = #{signid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>