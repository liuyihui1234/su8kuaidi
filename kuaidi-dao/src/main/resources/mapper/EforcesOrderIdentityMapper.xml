<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kuaidi.dao.EforcesOrderIdentityMapper">
  <resultMap id="BaseResultMap" type="org.kuaidi.bean.domain.EforcesOrderIdentity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="billsnumber" jdbcType="VARCHAR" property="billsnumber" />
    <result column="identitynum" jdbcType="VARCHAR" property="identitynum" />
    <result column="identitypic1" jdbcType="VARCHAR" property="identitypic1" />
    <result column="identitypic2" jdbcType="VARCHAR" property="identitypic2" />
  </resultMap>
  <sql id="Base_Column_List">
    id, billsnumber, identitynum, identitypic1, identitypic2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from eforces_orderIdentity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from eforces_orderIdentity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.kuaidi.bean.domain.EforcesOrderIdentity">
    insert into eforces_orderIdentity (id, billsnumber, identitynum, 
      identitypic1, identitypic2)
    values (#{id,jdbcType=INTEGER}, #{billsnumber,jdbcType=VARCHAR}, #{identitynum,jdbcType=VARCHAR}, 
      #{identitypic1,jdbcType=VARCHAR}, #{identitypic2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.kuaidi.bean.domain.EforcesOrderIdentity">
    insert into eforces_orderIdentity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="billsnumber != null">
        billsnumber,
      </if>
      <if test="identitynum != null">
        identitynum,
      </if>
      <if test="identitypic1 != null">
        identitypic1,
      </if>
      <if test="identitypic2 != null">
        identitypic2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="billsnumber != null">
        #{billsnumber,jdbcType=VARCHAR},
      </if>
      <if test="identitynum != null">
        #{identitynum,jdbcType=VARCHAR},
      </if>
      <if test="identitypic1 != null">
        #{identitypic1,jdbcType=VARCHAR},
      </if>
      <if test="identitypic2 != null">
        #{identitypic2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.kuaidi.bean.domain.EforcesOrderIdentity">
    update eforces_orderIdentity
    <set>
      <if test="billsnumber != null">
        billsnumber = #{billsnumber,jdbcType=VARCHAR},
      </if>
      <if test="identitynum != null">
        identitynum = #{identitynum,jdbcType=VARCHAR},
      </if>
      <if test="identitypic1 != null">
        identitypic1 = #{identitypic1,jdbcType=VARCHAR},
      </if>
      <if test="identitypic2 != null">
        identitypic2 = #{identitypic2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.kuaidi.bean.domain.EforcesOrderIdentity">
    update eforces_orderIdentity
    set billsnumber = #{billsnumber,jdbcType=VARCHAR},
      identitynum = #{identitynum,jdbcType=VARCHAR},
      identitypic1 = #{identitypic1,jdbcType=VARCHAR},
      identitypic2 = #{identitypic2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>